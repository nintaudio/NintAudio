image: "rust:latest"

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo
  RUST_BACKTRACE: "1"

stages:
  - test
  - build
  #- deploy

.build_template: &build_script
  ### run build, test and doc
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo build --release
    - cargo doc

# Install a C compiler, cmake and git into the container.
.linux_dependencies: &linux_deps
  ### run build, test and doc
    - apt-get update -yqq
    - apt-get install -yqq --no-install-recommends build-essential libasound2-dev libudev-dev

# Install a C compiler, cmake and git into the container.
.test_template: &test_script
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo test --verbose
    - cargo clippy -- -Dwarnings

windows:
  image: "sseemayer/rust-musl-builder-mingw:latest"
  stage: build
    cache:
        paths:
          - target/x86_64-pc-windows-gnu/release/deps
  artifacts:
    paths:
      - target/x86_64-pc-windows-gnu/release/nintaudio.exe
  script:
    - rustc --version && cargo --version      # Print version info for debugging
    - cargo build --release --target x86_64-pc-windows-gnu

# macos:
#   script: *build_script
#   stage: build
#   cache:
#     paths:
#         - target/release/deps
#   tags:
#     - macos
    
linux:
  script: *build_script
  stage: build
  before_script: *linux_deps
  cache:
    paths:
      - target/release/deps
  artifacts:
    paths:
      - target/release/nintaudio
      - target/docs

test:stable:
  image: rustdocker/rust:stable
  script: *test_script
  stage: test
  before_script: *linux_deps
  cache:
    paths:
      - target/debug/deps

test:beta:
  allow_failure: true
  image: rustdocker/rust:nightly
  script: *test_script
  stage: test
  before_script: *linux_deps
  cache:
    paths:
      - target/debug/deps
